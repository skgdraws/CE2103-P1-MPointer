#include "MPointerGB.h"

/*

    ░██████╗░███████╗████████╗        ██╗███╗░░██╗░██████╗████████╗░█████╗░███╗░░██╗░█████╗░███████╗
    ██╔════╝░██╔════╝╚══██╔══╝        ██║████╗░██║██╔════╝╚══██╔══╝██╔══██╗████╗░██║██╔══██╗██╔════╝
    ██║░░██╗░█████╗░░░░░██║░░░        ██║██╔██╗██║╚█████╗░░░░██║░░░███████║██╔██╗██║██║░░╚═╝█████╗░░
    ██║░░╚██╗██╔══╝░░░░░██║░░░        ██║██║╚████║░╚═══██╗░░░██║░░░██╔══██║██║╚████║██║░░██╗██╔══╝░░
    ╚██████╔╝███████╗░░░██║░░░        ██║██║░╚███║██████╔╝░░░██║░░░██║░░██║██║░╚███║╚█████╔╝███████╗
    ░╚═════╝░╚══════╝░░░╚═╝░░░        ╚═╝╚═╝░░╚══╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚═╝░░╚══╝░╚════╝░╚══════╝
 */
MPointerGB *MPointerGB::getInstance() {

    // Acquire lock before checking instance
    std::lock_guard<std::mutex> lock(mtx); // automatically releases lock

    if (instance == nullptr) {
        instance = new MPointerGB(); // Create the instance only once
    }

    return instance;
}
